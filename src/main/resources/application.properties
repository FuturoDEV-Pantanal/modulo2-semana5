# Configuramos a URL de conexão com o banco de dados
spring.datasource.url=jdbc:postgresql://localhost:5432/db_pantanal_api2

# Definimos o usuário de conexão com o banco de dados
spring.datasource.username=postgres

# Definimos a senha de conexão com o banco de dados
spring.datasource.password=postgres

# create-drop = drop todas as tabelas e cria novamente na inicialização da aplicação
# update = atualiza toda a estrutura das tabelas na inicialização da aplicação
# none = não faz nenhuma alteração da estrutura das tabelas durante a inicialização da aplicação
spring.jpa.hibernate.ddl-auto=create-drop

# Esta configuração desativa as exptions de cblob geradas pelo implementação do JDBC do PostgreSQL
# spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

# Informamos o dialeto do banco que vamos utilizar na aplicação
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect

# Quando esta configuração esta ativada conseguimos ver os comandos DML gerandos no console da IDE
spring.jpa.show-sql=true

# Quando ativada esta configuração conseguimos ver os DDL gerados no console
spring.jpa.generate-ddl=true

# formata a saída dos comando SQL gerados no console da IDE
spring.jpa.properties.hibernate.format_sql=true
